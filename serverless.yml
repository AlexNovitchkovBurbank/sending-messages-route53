service: sending-messages-route53-recordSet

custom:
  stage: dev
provider:
  name: aws
  region: us-west-2
  deploymentBucket:
    name: sending-messages-codedeployment-bucket-${self:custom.stage}
  environment:
    ROUTE53_PUBLIC_HOSTED_ZONE_ID: ${file(env.yml):${self:custom.stage}.ROUTE53_PUBLIC_HOSTED_ZONE_ID}
    WEB_CERTIFICATE_NAME: ${file(env.yml):${self:custom.stage}.DOMAIN_NAME} # front facing route53 domain name
    WEB_CERTIFICATE_TARGET: !ImportValue "sending-messages-cloudfront-distribution-domain-name"

# resources:
#   Resources:
#     PublicWebsiteAlias:
#       Type: AWS::Route53::RecordSetGroup
#       Properties:
#         HostedZoneId: ${self:provider.environment.ROUTE53_PUBLIC_HOSTED_ZONE_ID}
#         RecordSets:
#           - Name: ${self:provider.environment.WEB_CERTIFICATE_NAME}
#             Type: CNAME # Type of A would mean resolves to ip address but CNAME resolves to another domain name like cloudfront
#             TTL: 300
#             ResourceRecords: # values for domain to resolve to
#               - ${self:provider.environment.WEB_CERTIFICATE_TARGET}
resources:
  Resources:
    MyCNAMERecordSet:
      Type: "AWS::Route53::RecordSet"
      Properties:
        Name: "${self:provider.environment.WEB_CERTIFICATE_NAME}"
        HostedZoneId: ${self:provider.environment.ROUTE53_PUBLIC_HOSTED_ZONE_ID}
        Type: "A"
        AliasTarget:
          HostedZoneId: "Z2FDTNDATAQYW2"
          DNSName: !Join
            - ""
            - - "${self:provider.environment.WEB_CERTIFICATE_TARGET}"
              - "."
